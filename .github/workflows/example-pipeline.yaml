name: CI Pipeline for Express App

on:
  push:
    branches:
      - '**' # Matches any branch
env:
  AWS_DEFAULT_REGION: "us-east-1"
  ECR_URI: 058264206227.dkr.ecr.us-east-1.amazonaws.com/knowledgecity

jobs:
  ci:
    name: Build, Test, and Security Scan
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Build the TypeScript project
      - name: Build Application
        run: npm run build

      # Run unit tests
      - name: Run Tests
        run: echo run unit test

      # Run static security scan using Snyk
      - name: Static Security Test
        run: echo run static security test


  build-image:
    name: build and push docker image into ECR registry
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  

      - name: Install TypeScript
        run: |
         npm install -g typescript
         tsc --version  

      - name: Configure AWS Credentials" Action for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}

      - name: login to ECR to get token
        run:  aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_URI

      - name: build the image
        run: docker build -t $ECR_URI:latest .

      - name: push the image to ECR registry
        run: docker push $ECR_URI:latest



        
        

      
